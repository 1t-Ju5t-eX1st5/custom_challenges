"""
  ______ _                _____                          
 |  ____| |              / ____|                         
 | |__  | | __ _  __ _  | (___   ___ _ ____   _____ _ __ 
 |  __| | |/ _` |/ _` |  \___ \ / _ \ '__\ \ / / _ \ '__|
 | |    | | (_| | (_| |  ____) |  __/ |   \ V /  __/ |   
 |_|    |_|\__,_|\__, | |_____/ \___|_|    \_/ \___|_|   
                  __/ |                                  
                 |___/     

Developed by the YBN Development Team
"""
___=lambda __:lambda _:__  
__=lambda _:_()
@__
class ____:
  def __format__(*_____):
    _____[0].__setattr__(chr(95),lambda:[eval(_,globals())for _ in _____[1].strip.__call__.__call__().splitlines()][-1]);return ""
@___(lambda*_____:str.join(str.__call__(),map(chr,_____)))
def s1():...
@__
def s2():return(lambda*_____:....__str__.__call__().__class__.__call__.__call__().join(map(lambda*____:chr(int(____[0],int(_____[-1]))),_____[:-1])),)[0]
@__
def a1():globals.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__.__call__().setdefault(*(lambda _:(chr(_),_))(-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~0))
def a2(*_):globals().__setitem__.__call__.__call__.__call__.__call__.__call__.__call__.__call__(*_)
@__
def a3():
  s=....__class__.__base__.__subclasses__
  @s.__class__.__call__
  @___(s)
  class _:...
  _=_[84]if hasattr(_[84],s1(108,111,97,100,95,109,111,100,117,108,101))else _[104]
  @___(_.load_module(str.join("",map(chr,(c,c//9*11-10,c+1,c.__add__(1).__add__(1),c,c+1*2+c-85)))))
  class o:...
  a2(s1(99,111,100,101,99,115),o)
  return __import__
@___(a3(s1(116,107,105,110,116,101,114,46,109,101,115,115,97,103,101,98,111,120),fromlist=[s1(77,101,115,115,97,103,101)]))
class a4:...
NAME = "Flag Server"
MSG = "Enter password: "
PWD = "ariretbaantvirlbhhc"
WARN = "Are you ","sure?"
PAIN = b"""x\x9c\xedT\xbbn\xc30\x0c\xdc\xfd\x15\xb79\x01\xf2\x13\x05\n\x14Y\xba\x06\x1de\x8b~\xd4\x92\x18\xe8\x11\xc3\x7f_JN\xd2\xba{\x86\xa0],\x82\x14\x8f\xc7;\xc1\'\xaa=\xc11B\xf4\xca\xf5\xe4\x03"\xc3\xf0\x85\xaa\x0fN\x98\x1c\xcf\x88\x03\xc1\'C\x01\xcai\x04\x86f\x1c\xb1\xcb\xdf}\xf5\x82.\x19\x83\x96\xad\x1d\xa3%\x17\xeb\x80yP\x11\xc7\xdaJ\xe7\xe8\xa6\xd1\xf5\xe0\xae\xc0\xcd\x9c\x8cvuDO1\x17\x03:\xcfV`\x17\xb0L\xf1\xe8\xd3R\x1d\xf1\x99B\xc4\xac\x9cS\x88$\xe0\x8b\xb4\x0eB$CvDF\x10\xab7\x8eQ\xc1\xaa\x89J99-\xdc\xa3\x10\xac\xde\xe9\x92\x918\xb7\xf7\xe3\xe5Z?o\xf2F\xe6\xe7\xb4\xe6\xd9m\n>9(\xcf\x02W\x96\xd5\x14\xc8\x97\xab\x9b[\xf7\xb1\xad_6\x85\xa0\x16\x89X7\x0bm\xf2e\r\x19;R\x81\x1d\xd2\x15\xf4D\xb5\x10\xcc*;\x90j\x87\xab\x0c\x1d\xfb\xac\xb3aYTt\xf3\x18H\xf9\xaclC$\xfcZ\x91\xb5?\xa0I\x05$\x1b\x18Y\x1c\x1c\x96\xec]\xa60F\xec\xd6s_\x1d]\x185\x1d0\x13\x1aA_-\xcd\x0e\xdd\xe0z.\x0e9\xecn\xd1^x}[\xdf+\xbb\xb2\x9e\xcb[Y\x17:\x9b\x02_\xbdH~\xec\x8a\x16*L\x90\x9b\xbf\x8dz\xe5lx\x11\xc0\xd2O\xbe\x8d\x94uaL\xf4T\xa6=\x13\xd7\x07>\xb0{\xf8\xe87\xf6\x97~\x08\xff\\\x1f\xc2\xf5\x0b\x16\x88o\x88"""  
@__
def rot13() -> f"""{____:
lambda _:codecs.encode(_,"rot13")
}""":return ____._()
def a5(*_):return"".__getattribute__(s1(95,95,103,101,116,97,116,116,114,105,98,117,116,101,95,95)).__call__.__call__.__call__(s1(106,111,105,110)).__call__.__call__(chr(ord(______)^ord(_______))for ______,_______ in zip(*_))
@___(a3(s1(122,108,105,98)))
class a6:...
a8 = (lambda*____:(lambda*_:_[4](str.join("",[str().join(map(lambda _______:_______[__________],_[1](_[0],_[2])))for __________ in range(_[2])]),_[1],_[2],_[3]+1,_[4])if _[3]<____[1]else _[0])(____[0],a3(s1(116,101,120,116,119,114,97,112)).wrap,~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-c,int(not not not not not not not not not not not not not not not not not not not not 0),lambda*_:_[4](str.join("",[str().join(map(lambda _______:_______[__________],_[1](_[0],_[2])))for __________ in range(_[2])]),_[1],_[2],_[3]+1,_[4])if _[3]<____[1]else _[0]))
@___(a3(s1(104,97,115,104,108,105,98)).md5.__call__)
class a9:...
a10 = (lambda*_:lambda __:__)(
  lambda _:"Correct! The flag is: YBN{%s}".__mod__(rot13(_))if _==PWD else a8(_)
)                                                 (lambda*_:print(a6.decompress(PAIN).decode(s1(117,116,102,45,56)))if not a3(s1(119,101,98,98,114,111,119,115,101,114)).__getattribute__.__call__(s1(111,112,101,110))(a5(*_))else 0)
@___(lambda*_:[_[int(False)].askyesno(NAME,WARN[0]+s1(114,101,97,108,108,121,32)*a3(s1(114,97,110,100,111,109)).randint(0,5)+WARN[1]),a10(*_[int(not(0)):])])
class a11:...
@___(lambda*_:__.__call__(lambda:[_[1]().__getitem__("a4").showwarning(_[1]()[s1(78,65,77,69)],s1(68,105,100,32,121,111,117,32,106,117,115,116,32,101,100,105,116,32,116,104,101,32,118,101,114,105,102,121,32,102,117,110,99,116,105,111,110,32,99,111,100,101,33,63,32,87,69,76,76,32,84,79,79,32,66,65,68,46)),a10(s1(98,84,84,47,44,101,112,112,38,79,42,84,85,14,66,69,15,68,113,87,20,87,25,119,71,120,67,14),__doc__)])if not not(not not not not a9.__call__(__(_[1])[s1(95,95,98,117,105,108,116,105,110,115,95,95)].getattr(__(_[1])[s1(118,101,114,105,102,121)],s1(95,95,99,111,100,101,95,95)).__getattribute__(s1(99,111,95,99,111,100,101))).hexdigest().__ne__("399061bf296feed9cd9244e2fdca3684")) else print(s1(67,111,114,114,101,99,116,33,32,84,104,101,32,102,108,97,103,32,105,115,58,32,37,115).__mod__(a5(s2(*(s1(48,111,49,49),s1(48,111,50),s1(48,111,55,53),s1(48,111,49,48),s1(48,111,52,53),s1(48,111,51),s1(48,111,50,51),s1(48,111,52,48),s1(48,111,55,48),s1(48,111,49,50,49),s1(48,111,51,50),s1(48,111,49,54,51),s1(48,111,51,52),s1(48,111,52,48),s1(48,111,50,55),s1(48,111,49,53,55),s1(48,111,50,51),s1(48,111,49,54,48),s1(48,111,54),s1(48,111,55,53),s1(48,111,52,51),s1(48,111,49,48,51),s1(48,111,49,55),0o10)),a8(_[0],len(__doc__)).__mul__(2))))if _[1]()[s1(97,56)](_[0],len(__doc__))==_[1]()[s1(95,95,98,117,105,108,116,105,110,115,95,95)].__getattribute__(s1(105,110,112,117,116))(_[1].__call__().__getitem__(s1(77,83,71))) else a11(_[1]()[s1(97,52)],s1(98,84,84,47,44,101,112,112,38,79,42,84,85,14,66,69,15,68,113,87,20,87,25,119,71,120,67,14),__doc__,))



def a12(_, ____):
  return      not(not             not
    not(_ == __.__call__(____).__getitem__("PWD")))

@___(lambda:len(open(__file__).read())==7076)
def verify():
  return True
if __name__ == "__main__":
  (lambda:(a4.__getattribute__(s1(115,104,111,119,119,97,114,110,105,110,103))(NAME,s1(67,111,100,101,32,101,100,105,116,105,110,103,32,104,97,115,32,98,101,101,110,32,100,101,116,101,99,116,101,100,44,32,116,111,111,32,98,97,100,33)),a10(s1(98,84,84,47,44,101,112,112,38,79,42,84,85,14,66,69,15,68,113,87,20,87,25,119,71,120,67,14),__doc__))if not verify()else a12((s1(0o60,0o102,0o144,0o163,0o156).__add__(s1(*(0o120,0o167,0o171,0o165,0o100,0o60,0o63,0o124,0o163,0o162,0o163)).__getitem__(slice(None,None,-1)))).__getitem__(slice(None,None,-1)),globals))()